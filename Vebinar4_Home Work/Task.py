# Даны два неупорядоченных набора целых чисел (может быть, с повторениями). 
# Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n - кол-во элементов первого множества. 
# m - кол-во элементов второго множества. Затем пользователь вводит сами элементы множеств.

# n = int(input('Введите кол-во элементов первого множества: '))
# m = int(input('Введите кол-во элементов второго множества: '))
# spisok_1 = set(map(int, input(f'Введите {n} цифр через пробел: ').split()))
# spisok_2 = set(map(int, input(f'Введите {m} цифр через пробел: ').split()))
# n = len(spisok_1)
# m = len(spisok_2)
# spisok_3 = spisok_1.intersection(spisok_2)

# print(f'Список уникальных цифр: {sorted(spisok_3)}')

# В фермерском хозяйстве в Карелии выращивают чернику. Она растет на круглой грядке,
# причем кусты высажены только по окружности. Таким образом, у каждого куста есть ровно два соседних.
# Всего на грядке растет N кустов. Эти кусты обладают разной урожайностью, поэтому ко времени сбора
# на них выросло различное число ягод – на i-ом кусте выросло ai ягод. В этом фермерском хозяйстве внедрена система
# автоматического сбора черники. Эта система состоит из управляющего модуля и нескольких собирающих модулей.
# Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, собирает ягоды с этого куста
# и с двух соседних с ним. Напишите программу для нахождения максимального числа ягод, которое может собрать за один
# заход собирающий модуль, находясь перед некоторым кустом заданной во входном файле грядки.
# Пример:
# 4 -> 1 2 3 4
# 9

N = int(input('Введите кол-во кустов: '))
spisok = list(map(int, input(f'Введите {N} цифр через пробел: ').split()))

N = len(spisok)
spisok = spisok + spisok[:2]
m = 0
for i in range(N):
    m = max( m, spisok[i] + spisok[i+1] + spisok[i+2] )
print(m)